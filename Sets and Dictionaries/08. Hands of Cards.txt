using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HandsOfCards
{
    public class HandsOfCards
    {
        public static void Main()
        {
            string input = Console.ReadLine();
            Dictionary<string,Dictionary<int,HashSet<int>>> dictionary = new Dictionary<string, Dictionary<int, HashSet<int>>>();

            while (input != "JOKER")
            {
                string[] CardInfo = input.Split(new[] {':', ','}, StringSplitOptions.RemoveEmptyEntries);
                string name = CardInfo[0];
                if (!dictionary.ContainsKey(name))
                {
                    dictionary[name] = new Dictionary<int, HashSet<int>>();

                    for (int i = 1; i <= 4 ; i++)
                    {
                        dictionary[name].Add(i,new HashSet<int>());
                    }
                }
                for (int i = 1; i < CardInfo.Length; i++)
                {
                    string currentCard = CardInfo[i].Trim();
                    int face = 0;
                    int suite = 0;
                    if (currentCard.Length > 2)
                    {
                         face = GetFace(currentCard.Substring(0, 2));
                         suite = GetSuite(currentCard.Substring(2));
                    }
                    else
                    {
                        face = GetFace(currentCard[0].ToString());
                        suite = GetSuite(currentCard[1].ToString());
                    }
                    if (!dictionary[name][suite].Contains(face))
                    {
                        dictionary[name][suite].Add(face);
                    }
                }
                input = Console.ReadLine();
            }

            foreach (var outerPair in dictionary)
            {
                int sum = outerPair.Value.Sum(innerPair => innerPair.Key*innerPair.Value.Sum());

                Console.WriteLine("{0}: {1}",outerPair.Key,sum);
            }
            
        }

        private static int GetSuite(string suite)
        {
            switch (suite)
            {
                case "S":
                    return 4;
                case "H":
                    return 3;
                case "D":
                    return 2;
                case "C":
                    return 1;
                default:
                   return 0;
            }
        }

        private static int GetFace(string face)
        {
            switch (face)
            {
                case "J":
                    return 11;
                case "Q":
                    return 12;
                case "K":
                    return 13;
                case "A":
                    return 14;
                default:
                   return int.Parse(face);
            }
        }
    }
}
